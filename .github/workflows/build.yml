name: Build Solution

on:
  push:
    paths:
      - 'src/**'
      - '.github/**'
  pull_request:
    paths:
      - 'src/**'
      - '.github/**'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '9.0.x'

    - name: Start SQL Server Service
      run: |
        Set-Service -Name MSSQL`$SQLEXPRESS -StartupType Manual
        Start-Service MSSQL`$SQLEXPRESS
        Get-Service MSSQL`$SQLEXPRESS | Select Status
      shell: pwsh

    - name: Test SQL Server Connection
      run: |
        $connectionString = "Server=(local)\SQLEXPRESS;Database=master;Trusted_Connection=True;"
        $query = "SELECT @@VERSION as Version;"
        
        $connection = New-Object System.Data.SqlClient.SqlConnection($connectionString)
        $command = New-Object System.Data.SqlClient.SqlCommand($query, $connection)
        
        try {
            $connection.Open()
            $reader = $command.ExecuteReader()
            while ($reader.Read()) {
                Write-Host "SQL Server Version:" $reader["Version"]
            }
            $reader.Close()
            Write-Host "Connection test successful!"
        }
        catch {
            Write-Host "Error connecting to database: $_"
            exit 1
        }
        finally {
            $connection.Close()
        }
      shell: pwsh

    - name: Create Test Database
      run: |
        $connectionString = "Server=(local)\SQLEXPRESS;Database=master;Trusted_Connection=True;"
        $createDbQuery = "
        IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'TestDB')
        BEGIN
            CREATE DATABASE TestDB;
        END
        "
        
        $connection = New-Object System.Data.SqlClient.SqlConnection($connectionString)
        $command = New-Object System.Data.SqlClient.SqlCommand($createDbQuery, $connection)
        
        try {
            $connection.Open()
            $command.ExecuteNonQuery()
            Write-Host "TestDB database created successfully!"
        }
        catch {
            Write-Host "Error creating database: $_"
            exit 1
        }
        finally {
            $connection.Close()
        }
      shell: pwsh

    - name: Restore dependencies
      run: dotnet restore src/SqlBulkCopier.sln

    - name: Build solution
      run: dotnet build src/SqlBulkCopier.sln --configuration Release --no-restore